# GitHub Actions Workflow for Deploying Azure Python Function App via Zip
#
# This workflow automates the build and deployment of an Azure Function App
# using a zip package. It includes the following steps:
#
# 1. Trigger on push to `main` branch.
# 2. Set up Python environment.
# 3. Install dependencies into a zip-compatible directory.
# 4. Copy function code, including debug/manual triggers.
# 5. Zip the build directory.
# 6. Deploy the zip to Azure using a publish profile.
#
# üìç To update this workflow:
# - Modify the folder list under the "cp -r" line if new functions are added.
# - Ensure all function folders are included.
# - Update the Python version if needed.
# - Use secrets to securely manage Azure credentials.

name: Zip Deploy Azure Python Function

on:
  push:
    branches:
      - main  # Adjust if you use a different deployment branch

jobs:
  zip-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì¶ Checkout code
      uses: actions/checkout@v3

    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: üß™ Install dependencies and build zip
      run: |
        # Create base folder for packages
        mkdir -p build/.python_packages/lib/site-packages
        pip install -r requirements.txt -t build/.python_packages/lib/site-packages

        # Copy project and function files
        cp requirements.txt host.json build/
        cp -r IntradayAlert Watchlist OutcomeTracker EnvDebug \
              rss_listener nlp_processor entry_target logger \
              watchlist_debug tracker_debug build/

        # Create deployable zip bundle
        cd build && zip -r ../function.zip .

    - name: üöÄ Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: quant-bot-app
        package: function.zip
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
