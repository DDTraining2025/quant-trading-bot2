name: üöÄ Zip Deploy Azure Python Function

on:
  push:
    branches:
      - main

jobs:
  zip-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì¶ Checkout repository
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: üìÅ Install dependencies and prepare build folder
      run: |
        # Create clean build directory
        mkdir -p build

        # Copy everything except .git, build artifacts, and markdown/docs
        rsync -av --exclude build --exclude .git --exclude .github --exclude '*.md' ./ build/

        # Install dependencies into build root
        pip install -r requirements.txt --target build/

    - name: ‚úÖ Validate Azure Functions structure
      run: |
        cd build

        echo "::group::Checking for host.json"
        if [ ! -f "host.json" ]; then
          echo "‚ùå ERROR: host.json not found in build root!"
          exit 1
        else
          echo "‚úÖ host.json found"
        fi
        echo "::endgroup::"

        echo "::group::Checking function directories"
        function_count=0
        for dir in */; do
          if [ -f "${dir}function.json" ]; then
            echo "‚úÖ Function found: ${dir}"
            function_count=$((function_count + 1))
          fi
        done
        if [ $function_count -eq 0 ]; then
          echo "‚ùå ERROR: No function.json files found!"
          exit 1
        fi
        echo "::endgroup::"

    - name: üîê Check required environment variables
      run: |
        echo "::group::Checking critical environment variables"
        missing=0
        for var in PG_HOST PG_DATABASE PG_USER PG_PASSWORD FINNHUB DISCORDWEBHOOKNEWS KEYVAULT_URL; do
          if [ -z "${{ secrets[$var] || env.$var }}" ]; then
            echo "‚ùå Missing: $var"
            missing=$((missing + 1))
          else
            echo "‚úÖ Found: $var"
          fi
        done
        if [ $missing -gt 0 ]; then
          echo "‚ùå ERROR: One or more critical secrets are missing!"
          exit 1
        fi
        echo "::endgroup::"

    - name: üßπ Clean up build directory
      run: |
        cd build
        find . -name "*.pyc" -delete
        find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
        rm -rf .pytest_cache/ .coverage .env .vscode/ || true

    - name: üì¶ Create deployment package
      run: |
        cd build
        zip -r ../function.zip . \
          -x ".git/*" \
          -x "__pycache__/*" \
          -x "*.pyc" \
          -x "tests/*" \
          -x ".pytest_cache/*" \
          -x ".coverage" \
          -x "*.log"
        cd ..

        # Check zip size
        zip_size=$(stat -c%s function.zip)
        echo "Zip file size: $((zip_size / 1024 / 1024)) MB"
        if [ $zip_size -gt 1073741824 ]; then
          echo "‚ùå ERROR: Zip file too large (>1GB)"
          exit 1
        fi

    - name: üîç Preview zip contents
      run: |
        unzip -l function.zip | head -30
        if unzip -l function.zip | grep -q "host.json"; then
          echo "‚úÖ host.json found in zip"
        else
          echo "‚ùå ERROR: host.json missing from zip!"
          exit 1
        fi

    - name: üöÄ Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: quant-bot-app
        package: function.zip
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
        scm-do-build-during-deployment: false
        enable-oryx-build: false
