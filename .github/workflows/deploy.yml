name: 🚀 Zip Deploy Azure Python Function

on:
  push:
    branches:
      - main

jobs:
  zip-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📁 Prepare Azure Functions structure
      run: |
        mkdir -p build
        cp requirements.txt host.json build/ 2>/dev/null || echo "Not found"

        # Copy Python files in root
        find . -maxdepth 1 -name "*.py" -exec cp {} build/ \; 2>/dev/null || true

        # Copy function directories
        for func_dir in IntradayAlert OutcomeTracker Watchlist rsslistener dbwriter logger keyvaultloader discordposter entrytarget finnhubapi mcpscore nlpprocessor; do
          if [ -d "$func_dir" ]; then
            echo "Copying: $func_dir"
            cp -r "$func_dir" build/
            [ ! -f "build/$func_dir/__init__.py" ] && echo "# required" > "build/$func_dir/__init__.py"
          fi
        done

    - name: 🔧 Install dependencies into .python_packages
      run: |
        cd build
        mkdir -p .python_packages/lib/site-packages
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt --target .python_packages/lib/site-packages --upgrade --no-cache-dir
        else
          echo "requirements.txt missing"
          exit 1
        fi

    - name: ✅ Validate function layout
      run: |
        cd build
        [ ! -f "host.json" ] && echo "❌ host.json missing" && exit 1

        count=0
        for d in */; do
          if [ -f "$d/function.json" ]; then
            echo "✅ Function: $d"
            count=$((count+1))
          fi
        done

        if [ "$count" -eq 0 ]; then
          echo "❌ No functions found"
          exit 1
        fi

    - name: 🧹 Clean up before zip
      run: |
        cd build
        find . -name "*.pyc" -delete
        find . -type d -name "__pycache__" -exec rm -rf {} +
        rm -rf .pytest_cache/ .coverage .env .vscode/ || true

    - name: 📦 Create deployment zip from inside build/
      run: |
        cd build
        zip -r ../function.zip * .[^.]* || {
          echo "❌ Failed to create zip"
          exit 1
        }

    - name: 🔍 Validate zip contents
      run: |
        echo "::group::Contents"
        unzip -l function.zip | head -40
        echo "::endgroup::"

        unzip -l function.zip | grep -q "host.json" || {
          echo "❌ host.json missing in zip root"
          exit 1
        }

        count=$(unzip -l function.zip | grep -c "function.json")
        [ "$count" -eq 0 ] && echo "❌ No function.json in zip" && exit 1
        echo "✅ Found $count function.json file(s)"

    - name: 💾 Upload zip for debugging
      uses: actions/upload-artifact@v4
      with:
        name: function-zip-debug
        path: function.zip

    - name: 🚀 Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: quant-bot-app
        package: function.zip
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true
